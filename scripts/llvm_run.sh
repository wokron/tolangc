# This script is used to run LLVM IR generated by the compiler

# Usage: ./llvm_run.sh <file.ll>

# Check if the number of arguments is correct
if [ "$#" -ne 1 ]; then
    echo "Usage: ./llvm_run.sh <file.ll>"
    exit 1
fi

ir_file=$1

# Check if the file exists
if [ ! -f $ir_file ]; then
    echo "File $ir_file not found!"
    exit 1
fi

# Check required tools
if ! command -v lli &>/dev/null; then
    echo "Command lli not found! Please install LLVM."
    exit 1
fi

CACHE_DIR=".llvm_cache"
# Create cache directory if it doesn't exist
if [ ! -d $CACHE_DIR ]; then
    mkdir $CACHE_DIR
fi

# Check if lib.ll exists
if [ ! -f $CACHE_DIR/lib.ll ]; then
    echo "Generating lib.ll..."

    # Generate lib.c
    cat >$CACHE_DIR/lib.c <<EOF
#include <stdio.h>

float get() {
    float ret;
    scanf("%f", &ret);
    return ret;
}

void put(float val) { printf("%f\n", val); }
EOF

    # Compile lib.c to lib.ll
    clang -S -emit-llvm $CACHE_DIR/lib.c -o $CACHE_DIR/lib.ll -O0
fi

# Link the IR file with lib.ll
llvm-link $ir_file $CACHE_DIR/lib.ll -S -o $CACHE_DIR/out.ll

# Run the linked IR file
lli $CACHE_DIR/out.ll

# Remove the linked IR file
rm $CACHE_DIR/out.ll
